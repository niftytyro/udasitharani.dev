{"version":3,"sources":["Components/Introduction/Introduction.module.css","Components/AboutMe/AboutMe.module.css","Components/ProjectTile/ProjectTile.module.css","Components/MyWork/MyWork.module.css","static/project screenshots/Covid-19 Tracker.png","static/background.jpeg","Components/SocialLink/SocialLink.module.css","static/github.svg","static/gmail.svg","static/instagram.svg","static/linkedin.svg","static/medium.svg","static/telegram.svg","static/twitter.svg","Components/Introduction/Introduction.js","Components/SocialLink/SocialLink.js","Components/AboutMe/AboutMe.js","Components/ProjectTile/ProjectTile.js","Components/MyWork/MyWork.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Introduction","style","width","height","className","styles","backgroundImageContainer","backgroundImage","src","alt","shortIntroContainer","shortIntro","shortTitle","shortDescription","SocialLink","imgSrc","to","linkIcons","href","AboutMe","aboutMe","aboutHeader","aboutText","aboutLinks","GmailSVG","InstagramSVG","LinkedInSVG","TelegramSVG","MediumSVG","GithubSVG","TwitterSVG","ProjectTile","projectID","projectIMG","projectURL","projectDescription","id","projectTile","projectImage","projectDetails","MyWork","myWork","myWorkHeader","projects","Covid19TrackerIMG","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.09f4cd84.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backgroundImageContainer\":\"Introduction_backgroundImageContainer__x75Kc\",\"backgroundImage\":\"Introduction_backgroundImage__3Q9jP\",\"shortIntroContainer\":\"Introduction_shortIntroContainer__8Kiox\",\"shortIntro\":\"Introduction_shortIntro__24Gii\",\"shortTitle\":\"Introduction_shortTitle__3-ltz\",\"shortDescription\":\"Introduction_shortDescription__1Ua0E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutMe\":\"AboutMe_aboutMe__2NStJ\",\"aboutHeader\":\"AboutMe_aboutHeader__3pbrO\",\"aboutText\":\"AboutMe_aboutText__3GIN9\",\"aboutLinks\":\"AboutMe_aboutLinks__3AXtP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectTile\":\"ProjectTile_projectTile__AG4lx\",\"projectDetails\":\"ProjectTile_projectDetails__3TxAB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myWork\":\"MyWork_myWork__1SgO8\",\"myWorkHeader\":\"MyWork_myWorkHeader__UAdKY\",\"projects\":\"MyWork_projects__3QS3W\"};","module.exports = __webpack_public_path__ + \"static/media/Covid-19 Tracker.bda9dfa4.png\";","module.exports = __webpack_public_path__ + \"static/media/background.0f47590b.jpeg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkIcons\":\"SocialLink_linkIcons__3qvwj\"};","module.exports = __webpack_public_path__ + \"static/media/github.76d344f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/gmail.23a7dee5.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.b1c58ee1.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.4b475fb3.svg\";","module.exports = __webpack_public_path__ + \"static/media/medium.2b94a46e.svg\";","module.exports = __webpack_public_path__ + \"static/media/telegram.a888fec0.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.c9f12008.svg\";","import React from \"react\";\nimport backgroundImage from \"../../static/background.jpeg\";\nimport styles from \"./Introduction.module.css\";\n\nconst Introduction = () => {\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      <div className={styles.backgroundImageContainer}>\n        <img className={styles.backgroundImage} src={backgroundImage} alt=\"\" />\n      </div>\n      <div className={styles.shortIntroContainer}>\n        <div className={styles.shortIntro}>\n          <div className={styles.shortTitle}>I'm Udasi Tharani.</div>\n          <div className={styles.shortDescription}>\n            A freelance software developer working on great web apps with\n            startups, companies, and teams across the globe.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Introduction;\n","import React from \"react\";\nimport styles from \"./SocialLink.module.css\";\n\nfunction SocialLink({ imgSrc, to }) {\n  return (\n    <div className={styles.linkIcons}>\n      <a href={to}>\n        <img src={imgSrc} alt=\"\" />\n      </a>\n    </div>\n  );\n}\n\nexport default SocialLink;\n","import React from \"react\";\nimport styles from \"./AboutMe.module.css\";\nimport SocialLink from \"../SocialLink/SocialLink\";\nimport GithubSVG from \"../../static/github.svg\";\nimport GmailSVG from \"../../static/gmail.svg\";\nimport InstagramSVG from \"../../static/instagram.svg\";\nimport LinkedInSVG from \"../../static/linkedin.svg\";\nimport MediumSVG from \"../../static/medium.svg\";\nimport TelegramSVG from \"../../static/telegram.svg\";\nimport TwitterSVG from \"../../static/twitter.svg\";\n\nconst AboutMe = () => {\n  return (\n    <div className={styles.aboutMe}>\n      <div className={styles.aboutHeader}>A little bit about Myself</div>\n      <div className={styles.aboutText}>\n        I'm a freelancer and a self-taught software developer based in India. I\n        create and code beautiful user interfaces with top-notch tech stacks.\n      </div>\n      <div className={styles.aboutLinks}>\n        <SocialLink imgSrc={GmailSVG} to=\"mailto: me@udasitharani.dev\" />\n        <SocialLink\n          to=\"https://www.instagram.com/udasi.tharani/\"\n          imgSrc={InstagramSVG}\n        />\n        <SocialLink\n          to=\"https://www.linkedin.com/in/udasi-tharani-bb3232193/\"\n          imgSrc={LinkedInSVG}\n        />\n        <SocialLink to=\"https://t.me/udasitharani\" imgSrc={TelegramSVG} />\n        <SocialLink to=\"https://medium.com/@udasitharani\" imgSrc={MediumSVG} />\n        <SocialLink to=\"https://github.com/udasitharani\" imgSrc={GithubSVG} />\n        <SocialLink to=\"https://twitter.com/TharaniUdasi\" imgSrc={TwitterSVG} />\n      </div>\n    </div>\n  );\n};\n\nexport default AboutMe;\n","import React from \"react\";\nimport styles from \"./ProjectTile.module.css\";\n\nfunction ProjectTile({\n  projectID,\n  projectIMG,\n  projectURL,\n  projectDescription,\n}) {\n  return (\n    <div id={projectID} className={styles.projectTile}>\n      <div className={styles.projectImage}>\n        <a href={projectURL}>\n          <img src={projectIMG} alt=\"\" />\n        </a>\n      </div>\n      <div className={styles.projectDetails}>\n        <p>{projectDescription}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default ProjectTile;\n","import React from \"react\";\nimport Covid19TrackerIMG from \"../../static/project screenshots/Covid-19 Tracker.png\";\nimport ProjectTile from \"../ProjectTile/ProjectTile\";\nimport styles from \"./MyWork.module.css\";\n\nconst MyWork = () => {\n  return (\n    <div className={styles.myWork}>\n      <div className={styles.myWorkHeader}>My Work</div>\n      <div className={styles.projects}>\n        <ProjectTile\n          projectID=\"covid-19-tracker\"\n          projectIMG={Covid19TrackerIMG}\n          projectURL=\"https://udasitharani.github.io/Covid-19-Tracker\"\n          projectDescription=\"A Covid-19-Tracker made with Reactjs.\"\n        />\n        <ProjectTile\n          projectID=\"covid-19-tracker\"\n          projectIMG={Covid19TrackerIMG}\n          projectURL=\"https://udasitharani.github.io/Covid-19-Tracker\"\n          projectDescription=\"A Covid-19-Tracker made with Reactjs.\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MyWork;\n","import React from \"react\";\nimport Introduction from \"./Components/Introduction/Introduction\";\nimport AboutMe from \"./Components/AboutMe/AboutMe\";\nimport MyWork from \"./Components/MyWork/MyWork\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Introduction />\n      <AboutMe />\n      <MyWork />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}